package package_217
{
   import package_166.class_531;
   import com.company.util.Random;
   import package_88.class_416;
   import flash.utils.Timer;
   import package_88.class_828;
   import package_88.class_385;
   import package_163.class_528;
   import package_163.class_527;
   import package_2.class_111;
   import package_153.class_490;
   import package_153.class_496;
   import package_248.class_920;
   import package_106.class_285;
   import package_71.class_189;
   import package_159.class_513;
   import package_159.class_522;
   import package_85.class_235;
   import package_85.class_221;
   import package_86.class_240;
   import package_46.class_71;
   import package_45.class_69;
   import package_112.class_411;
   import package_71.class_144;
   import package_81.class_196;
   import com.company.assembleegameclient.game.class_412;
   import package_238.class_829;
   import com.company.assembleegameclient.parameters.Parameters;
   import package_96.class_609;
   import package_166.class_532;
   import _-NE.map;
   import _-z5.method_9;
   import package_127.class_711;
   import package_228.class_766;
   import _-z5.method_17;
   import package_295.class_1267;
   import package_295.class_1255;
   import package_293.class_1221;
   import package_293.class_1247;
   import package_71.class_194;
   import package_71.class_167;
   import package_71.class_162;
   import package_26.class_33;
   import package_71.class_182;
   import _-NE.method_11;
   import com.hurlant.crypto.symmetric.ICipher;
   import com.hurlant.crypto.Crypto;
   import com.company.util.class_1297;
   import package_46.class_605;
   import _-yP.method_14;
   import package_87.BattleSummaryDialog;
   import package_218.*;
   import package_225.*;
   import com.company.assembleegameclient.objects.*;
   import package_135.*;
   import package_219.*;
   import package_136.class_442;
   import package_240.class_833;
   import package_112.class_310;
   import _-0Ur.error;
   import flash.utils.getTimer;
   import package_106.class_296;
   import com.company.assembleegameclient.util.Currency;
   import __AS3__.vec.Vector;
   import com.hurlant.util.der.PEM;
   import com.hurlant.crypto.rsa.RSAKey;
   import flash.utils.ByteArray;
   import com.hurlant.util.Base64;
   import package_145.Account;
   import _-UC.getUserId;
   import _-UC.method_234;
   import _-UC.method_150;
   import _-UC.method_258;
   import _-UC.method_149;
   import _-UC.method_286;
   import _-UC.name_66;
   import _-UC.method_448;
   import com.company.assembleegameclient.map.class_407;
   import com.company.assembleegameclient.util.class_1152;
   import package_46.class_606;
   import package_46.class_611;
   import package_79.TradeRequestPanel;
   import package_117.class_1054;
   import package_270.class_1053;
   import package_194.class_620;
   import package_119.class_873;
   import package_106.class_349;
   import package_117.class_800;
   import flash.geom.Point;
   import package_294.class_1248;
   import com.company.assembleegameclient.util.ConditionEffect;
   import package_240.class_915;
   import package_58.Server;
   import package_242.class_861;
   import com.company.assembleegameclient.map.class_439;
   import com.company.assembleegameclient.ui.class_1261;
   import flash.display.BitmapData;
   import package_103.class_311;
   import package_73.NotEnoughFameDialog;
   import package_242.class_859;
   import package_242.class_868;
   import _-UC.method_185;
   import flash.net.FileReference;
   import package_79.class_1232;
   import package_87.ContinueOrQuitDialog;
   import package_103.TitleView;
   import package_82.class_216;
   import flash.events.TimerEvent;
   import package_73.Dialog;
   import flash.events.Event;
   import package_82.class_213;
   import package_127.class_534;
   
   use namespace map;
   use namespace method_9;
   use namespace method_17;
   use namespace method_11;
   use namespace method_14;
   use namespace error;
   use namespace getUserId;
   use namespace method_234;
   use namespace method_150;
   use namespace method_258;
   use namespace method_149;
   use namespace method_286;
   use namespace name_66;
   use namespace method_448;
   use namespace method_185;
   
   public class class_914 extends class_710
   {
      
      {
         var _loc1_:* = false;
         var _loc2_:* = true;
      }
      
      public function class_914(param1:class_412, param2:Server, param3:int, param4:Boolean, param5:int, param6:int, param7:ByteArray, param8:String, param9:Boolean) {
         var _loc10_:* = false;
         var _loc11_:* = true;
         super();
         this.name_1 = class_33.method_7();
         this.var_1578 = this.name_1.getInstance(class_416);
         this.var_88 = this.name_1.getInstance(class_828);
         this.addSpeechBalloon = this.name_1.getInstance(class_385);
         this.var_1691 = this.name_1.getInstance(class_528);
         this.var_1762 = this.name_1.getInstance(class_527);
         this.var_2066 = this.name_1.getInstance(class_189);
         this.var_1975 = class_33.method_7().getInstance(class_285);
         this.var_1995 = this.name_1.getInstance(class_144);
         this.var_50 = this.name_1.getInstance(class_196);
         this.closeDialogs = this.name_1.getInstance(class_513);
         var_636 = this.name_1.getInstance(class_213);
         this.var_1 = this.name_1.getInstance(class_522);
         this.var_1902 = this.name_1.getInstance(class_235);
         this.var_1852 = this.name_1.getInstance(class_221);
         this.var_7 = this.name_1.getInstance(class_111);
         this.var_1769 = this.name_1.getInstance(class_490);
         this.var_1173 = this.name_1.getInstance(class_496);
         this.var_1721 = this.name_1.getInstance(class_920);
         this.var_104 = this.name_1.getInstance(class_71);
         var_17 = this.name_1.getInstance(class_534);
         this.var_27 = this.name_1.getInstance(class_531);
         this.model = this.name_1.getInstance(class_411);
         this.var_1060 = this.name_1.getInstance(class_240);
         gs_ = param1;
         server_ = param2;
         gameId_ = param3;
         var_303 = param4;
         charId_ = param5;
         keyTime_ = param6;
         key_ = param7;
         var_187 = param8;
         isFromArena_ = param9;
         this.method_2368();
         name_8 = this;
      }
      
      private static const const_290:int = 1000;
      
      private static function method_678(param1:int) : Boolean {
         var _loc2_:* = true;
         var _loc3_:* = false;
         return param1 == 2591 || param1 == 2592 || param1 == 2593 || param1 == 2612 || param1 == 2613 || param1 == 2636 || param1 == 2793 || param1 == 2794;
      }
      
      private var var_1485:class_1299;
      
      private var var_27:class_531;
      
      private var var_624:int = -1;
      
      private var player:Player;
      
      private var var_1050:Boolean = true;
      
      private var var_2000:Random = null;
      
      private var var_1578:class_416;
      
      private var death:class_879;
      
      private var var_1598:Timer;
      
      private var var_1053:int = 2;
      
      private var var_88:class_828;
      
      private var addSpeechBalloon:class_385;
      
      private var var_1691:class_528;
      
      private var var_1762:class_527;
      
      private var var_7:class_111;
      
      private var var_1769:class_490;
      
      private var var_1173:class_496;
      
      private var var_1721:class_920;
      
      private var var_1975:class_285;
      
      private var var_2066:class_189;
      
      private var closeDialogs:class_513;
      
      private var var_1:class_522;
      
      private var var_1902:class_235;
      
      private var var_1852:class_221;
      
      private var var_1060:class_240;
      
      private var var_104:class_71;
      
      private var name_1:class_69;
      
      private var model:class_411;
      
      private var var_1995:class_144;
      
      private var var_50:class_196;
      
      private function method_2368() : void {
         var _loc1_:* = true;
         var _loc2_:* = false;
         this.name_1.map(class_412).method_35(gs_);
         this.var_1485 = this.name_1.getInstance(class_1299);
         this.name_1.method_11(class_412);
      }
      
      override public function disconnect() : void {
         var _loc1_:* = false;
         var _loc2_:* = true;
         this.method_2825();
         this.method_2216();
         var_17.disconnect();
      }
      
      private function method_2825() : void {
         var _loc1_:* = true;
         var _loc2_:* = false;
         var_17.connected.remove(this.method_628);
         var_17.closed.remove(this.method_551);
         var_17.error.remove(this.method_194);
      }
      
      override public function connect() : void {
         var _loc2_:* = false;
         var _loc3_:* = true;
         this.method_1505();
         this.method_1991();
         var _loc1_:class_829 = new class_829();
         _loc1_.name = Parameters.const_130;
         _loc1_.text = class_609.const_1084;
         _loc1_.tokens = {"serverName":server_.name};
         this.var_88.dispatch(_loc1_);
         var_17.connect(server_.address,server_.port);
      }
      
      public function method_1505() : void {
         var _loc1_:* = true;
         var _loc2_:* = false;
         var_17.connected.add(this.method_628);
         var_17.closed.add(this.method_551);
         var_17.error.add(this.method_194);
      }
      
      public function method_1991() : void {
         var _loc2_:* = true;
         var _loc3_:* = false;
         var _loc1_:class_532 = this.name_1.getInstance(class_532);
         _loc1_._-NE.map(CREATE).method_9(Create);
         _loc1_._-NE.map(PLAYERSHOOT).method_9(class_1229);
         _loc1_._-NE.map(MOVE).method_9(class_1268);
         _loc1_._-NE.map(PLAYERTEXT).method_9(class_1291);
         _loc1_._-NE.map(const_366).method_9(class_711);
         _loc1_._-NE.map(INVSWAP).method_9(class_1258);
         _loc1_._-NE.map(USEITEM).method_9(class_1282);
         _loc1_._-NE.map(HELLO).method_9(class_1283);
         _loc1_._-NE.map(INVDROP).method_9(class_1292);
         _loc1_._-NE.map(PONG).method_9(class_1253);
         _loc1_._-NE.map(LOAD).method_9(class_1220);
         _loc1_._-NE.map(SETCONDITION).method_9(class_1222);
         _loc1_._-NE.map(TELEPORT).method_9(Teleport);
         _loc1_._-NE.map(USEPORTAL).method_9(class_1294);
         _loc1_._-NE.map(BUY).method_9(Buy);
         _loc1_._-NE.map(PLAYERHIT).method_9(class_1290);
         _loc1_._-NE.map(ENEMYHIT).method_9(class_1239);
         _loc1_._-NE.map(AOEACK).method_9(class_1302);
         _loc1_._-NE.map(SHOOTACK).method_9(class_1288);
         _loc1_._-NE.map(OTHERHIT).method_9(class_1263);
         _loc1_._-NE.map(SQUAREHIT).method_9(class_1272);
         _loc1_._-NE.map(GOTOACK).method_9(class_1278);
         _loc1_._-NE.map(GROUNDDAMAGE).method_9(class_1298);
         _loc1_._-NE.map(CHOOSENAME).method_9(class_1226);
         _loc1_._-NE.map(CREATEGUILD).method_9(class_1281);
         _loc1_._-NE.map(GUILDREMOVE).method_9(class_1235);
         _loc1_._-NE.map(GUILDINVITE).method_9(class_1245);
         _loc1_._-NE.map(REQUESTTRADE).method_9(class_1277);
         _loc1_._-NE.map(CHANGETRADE).method_9(class_1219);
         _loc1_._-NE.map(ACCEPTTRADE).method_9(class_1257);
         _loc1_._-NE.map(CANCELTRADE).method_9(class_1271);
         _loc1_._-NE.map(CHECKCREDITS).method_9(class_1236);
         _loc1_._-NE.map(ESCAPE).method_9(class_1265);
         _loc1_._-NE.map(JOINGUILD).method_9(class_1238);
         _loc1_._-NE.map(CHANGEGUILDRANK).method_9(class_1249);
         _loc1_._-NE.map(EDITACCOUNTLIST).method_9(class_1243);
         _loc1_._-NE.map(const_247).method_9(class_713);
         _loc1_._-NE.map(const_236).method_9(class_714);
         _loc1_._-NE.map(ENTER_ARENA).method_9(class_766);
         _loc1_._-NE.map(const_608).method_9(class_712);
         _loc1_._-NE.map(FAILURE).method_9(class_1218).method_17(this.method_1619);
         _loc1_._-NE.map(CREATE_SUCCESS).method_9(class_1250).method_17(this.method_2477);
         _loc1_._-NE.map(const_677).method_9(class_1286).method_17(this.method_2739);
         _loc1_._-NE.map(DAMAGE).method_9(Damage).method_17(this.method_2233);
         _loc1_._-NE.map(UPDATE).method_9(Update).method_17(this.method_1022);
         _loc1_._-NE.map(NOTIFICATION).method_9(class_1224).method_17(this.method_1668);
         _loc1_._-NE.map(GLOBAL_NOTIFICATION).method_9(class_1266).method_17(this.method_2161);
         _loc1_._-NE.map(const_376).method_9(class_1285).method_17(this.method_2454);
         _loc1_._-NE.map(const_655).method_9(class_1274).method_17(this.method_2158);
         _loc1_._-NE.map(GOTO).method_9(class_1273).method_17(this.method_2171);
         _loc1_._-NE.map(INVRESULT).method_9(class_1300).method_17(this.method_1942);
         _loc1_._-NE.map(RECONNECT).method_9(class_1284).method_17(this.method_1087);
         _loc1_._-NE.map(PING).method_9(class_1264).method_17(this.method_2343);
         _loc1_._-NE.map(MAPINFO).method_9(class_752).method_17(this.method_1456);
         _loc1_._-NE.map(PIC).method_9(Pic).method_17(this.method_1706);
         _loc1_._-NE.map(DEATH).method_9(class_879).method_17(this.method_1790);
         _loc1_._-NE.map(BUYRESULT).method_9(class_1246).method_17(this.method_1473);
         _loc1_._-NE.map(AOE).method_9(class_1280).method_17(this.method_2701);
         _loc1_._-NE.map(ACCOUNTLIST).method_9(class_1210).method_17(this.method_2863);
         _loc1_._-NE.map(QUESTOBJID).method_9(class_1241).method_17(this.method_1886);
         _loc1_._-NE.map(NAMERESULT).method_9(class_1179).method_17(this.method_1110);
         _loc1_._-NE.map(const_650).method_9(class_1231).method_17(this.method_2492);
         _loc1_._-NE.map(ALLYSHOOT).method_9(class_1295).method_17(this.method_2119);
         _loc1_._-NE.map(const_739).method_9(class_1240).method_17(this.method_2258);
         _loc1_._-NE.map(TRADEREQUESTED).method_9(class_1244).method_17(this.method_2126);
         _loc1_._-NE.map(TRADESTART).method_9(class_819).method_17(this.method_2064);
         _loc1_._-NE.map(TRADECHANGED).method_9(class_820).method_17(this.method_2063);
         _loc1_._-NE.map(TRADEDONE).method_9(class_1217).method_17(this.method_2923);
         _loc1_._-NE.map(TRADEACCEPTED).method_9(class_821).method_17(this.method_1504);
         _loc1_._-NE.map(CLIENTSTAT).method_9(class_1259).method_17(this.method_2664);
         _loc1_._-NE.map(const_736).method_9(File).method_17(this.method_2817);
         _loc1_._-NE.map(INVITEDTOGUILD).method_9(class_1296).method_17(this.method_1656);
         _loc1_._-NE.map(PLAYSOUND).method_9(class_1251).method_17(this.method_1377);
         _loc1_._-NE.map(const_1198).method_9(class_1242).method_17(this.method_2794);
         _loc1_._-NE.map(const_861).method_9(class_1230).method_17(this.method_1468);
         _loc1_._-NE.map(const_1181).method_9(class_1301).method_17(this.method_1562);
         _loc1_._-NE.map(const_1274).method_9(class_1237).method_17(this.method_1948);
         _loc1_._-NE.map(const_1406).method_9(class_1267).method_17(this.method_1509);
         _loc1_._-NE.map(const_1613).method_9(class_1255).method_17(this.method_1367);
         _loc1_._-NE.map(const_1197).method_9(class_1221).method_17(this.method_1662);
         _loc1_._-NE.map(const_1689).method_9(class_1247).method_17(this.method_731);
         _loc1_._-NE.map(const_1241).method_9(class_1252).method_17(this.method_1863);
         _loc1_._-NE.map(const_1310).method_9(class_1223).method_17(this.method_2557);
         _loc1_._-NE.map(const_1514).method_9(class_1260).method_17(this.method_2586);
      }
      
      private function method_1367(param1:class_1255) : void {
         var _loc3_:* = true;
         var _loc4_:* = false;
         var _loc2_:class_194 = this.name_1.getInstance(class_194);
         _loc2_.dispatch(param1.petName,param1.var_1208);
      }
      
      private function method_1509(param1:class_1267) : void {
         var _loc3_:* = true;
         var _loc4_:* = false;
         var _loc2_:class_167 = this.name_1.getInstance(class_167);
         _loc2_.dispatch(param1.var_402);
      }
      
      private function method_1468(param1:class_1230) : void {
         var _loc3_:* = false;
         var _loc4_:* = true;
         var _loc2_:class_162 = this.name_1.getInstance(class_162);
         _loc2_.dispatch(param1.type);
      }
      
      private function method_1562(param1:class_1301) : void {
         var _loc3_:* = true;
         var _loc4_:* = false;
         var _loc2_:class_182 = class_33.method_7().getInstance(class_182);
         _loc2_.dispatch(param1.type);
      }
      
      private function method_1948(param1:class_1237) : void {
         var _loc3_:* = false;
         var _loc4_:* = true;
         var _loc2_:class_1287 = this.name_1.getInstance(class_1287);
         _loc2_.method_2178(param1);
      }
      
      private function method_2794(param1:class_1242) : void {
         var _loc4_:* = false;
         var _loc5_:* = true;
         this.var_1995.dispatch(param1.var_102);
         var _loc2_:String = param1.var_102 > 0?this.var_50.method_191(param1.var_102).getName():"";
         var _loc3_:String = param1.var_102 < 0?class_609.const_990:class_609.const_1630;
         this.var_88.dispatch(class_829.make(Parameters.const_114,_loc3_,-1,-1,"",false,{"petName":_loc2_}));
      }
      
      private function method_2216() : void {
         var _loc2_:* = false;
         var _loc3_:* = true;
         var _loc1_:class_532 = this.name_1.getInstance(class_532);
         _loc1_._-NE.method_11(CREATE);
         _loc1_._-NE.method_11(PLAYERSHOOT);
         _loc1_._-NE.method_11(MOVE);
         _loc1_._-NE.method_11(PLAYERTEXT);
         _loc1_._-NE.method_11(const_366);
         _loc1_._-NE.method_11(INVSWAP);
         _loc1_._-NE.method_11(USEITEM);
         _loc1_._-NE.method_11(HELLO);
         _loc1_._-NE.method_11(INVDROP);
         _loc1_._-NE.method_11(PONG);
         _loc1_._-NE.method_11(LOAD);
         _loc1_._-NE.method_11(SETCONDITION);
         _loc1_._-NE.method_11(TELEPORT);
         _loc1_._-NE.method_11(USEPORTAL);
         _loc1_._-NE.method_11(BUY);
         _loc1_._-NE.method_11(PLAYERHIT);
         _loc1_._-NE.method_11(ENEMYHIT);
         _loc1_._-NE.method_11(AOEACK);
         _loc1_._-NE.method_11(SHOOTACK);
         _loc1_._-NE.method_11(OTHERHIT);
         _loc1_._-NE.method_11(SQUAREHIT);
         _loc1_._-NE.method_11(GOTOACK);
         _loc1_._-NE.method_11(GROUNDDAMAGE);
         _loc1_._-NE.method_11(CHOOSENAME);
         _loc1_._-NE.method_11(CREATEGUILD);
         _loc1_._-NE.method_11(GUILDREMOVE);
         _loc1_._-NE.method_11(GUILDINVITE);
         _loc1_._-NE.method_11(REQUESTTRADE);
         _loc1_._-NE.method_11(CHANGETRADE);
         _loc1_._-NE.method_11(ACCEPTTRADE);
         _loc1_._-NE.method_11(CANCELTRADE);
         _loc1_._-NE.method_11(CHECKCREDITS);
         _loc1_._-NE.method_11(ESCAPE);
         _loc1_._-NE.method_11(JOINGUILD);
         _loc1_._-NE.method_11(CHANGEGUILDRANK);
         _loc1_._-NE.method_11(EDITACCOUNTLIST);
         _loc1_._-NE.method_11(FAILURE);
         _loc1_._-NE.method_11(CREATE_SUCCESS);
         _loc1_._-NE.method_11(const_677);
         _loc1_._-NE.method_11(DAMAGE);
         _loc1_._-NE.method_11(UPDATE);
         _loc1_._-NE.method_11(NOTIFICATION);
         _loc1_._-NE.method_11(GLOBAL_NOTIFICATION);
         _loc1_._-NE.method_11(const_376);
         _loc1_._-NE.method_11(const_655);
         _loc1_._-NE.method_11(GOTO);
         _loc1_._-NE.method_11(INVRESULT);
         _loc1_._-NE.method_11(RECONNECT);
         _loc1_._-NE.method_11(PING);
         _loc1_._-NE.method_11(MAPINFO);
         _loc1_._-NE.method_11(PIC);
         _loc1_._-NE.method_11(DEATH);
         _loc1_._-NE.method_11(BUYRESULT);
         _loc1_._-NE.method_11(AOE);
         _loc1_._-NE.method_11(ACCOUNTLIST);
         _loc1_._-NE.method_11(QUESTOBJID);
         _loc1_._-NE.method_11(NAMERESULT);
         _loc1_._-NE.method_11(const_650);
         _loc1_._-NE.method_11(ALLYSHOOT);
         _loc1_._-NE.method_11(const_739);
         _loc1_._-NE.method_11(TRADEREQUESTED);
         _loc1_._-NE.method_11(TRADESTART);
         _loc1_._-NE.method_11(TRADECHANGED);
         _loc1_._-NE.method_11(TRADEDONE);
         _loc1_._-NE.method_11(TRADEACCEPTED);
         _loc1_._-NE.method_11(CLIENTSTAT);
         _loc1_._-NE.method_11(const_736);
         _loc1_._-NE.method_11(INVITEDTOGUILD);
         _loc1_._-NE.method_11(PLAYSOUND);
      }
      
      private function method_2429() : void {
         var _loc3_:* = false;
         var _loc4_:* = true;
         var _loc1_:ICipher = null;
         var _loc2_:ICipher = null;
         if(Parameters.const_880)
         {
            _loc1_ = Crypto.getCipher("rc4",class_1297.method_633(Parameters.RANDOM1));
            _loc2_ = Crypto.getCipher("rc4",class_1297.method_633(Parameters.RANDOM2));
            var_17.setOutgoingCipher(_loc1_);
            var_17.setIncomingCipher(_loc2_);
         }
      }
      
      override public function getNextDamage(param1:uint, param2:uint) : uint {
         return this.var_2000.method_2466(param1,param2);
      }
      
      override public function enableJitterWatcher() : void {
         var _loc1_:* = true;
         var _loc2_:* = false;
         if(jitterWatcher_ == null)
         {
            jitterWatcher_ = new JitterWatcher();
         }
      }
      
      override public function disableJitterWatcher() : void {
         var _loc1_:* = false;
         var _loc2_:* = true;
         if(jitterWatcher_ != null)
         {
            jitterWatcher_ = null;
         }
      }
      
      private function create() : void {
         var _loc3_:* = false;
         var _loc4_:* = true;
         var _loc1_:class_605 = this.var_104.method_80();
         var _loc2_:Create = this.var_27.method_14(CREATE) as Create;
         _loc2_.classType = _loc1_.id;
         _loc2_.skinType = _loc1_.name_12.method_328().id;
         var_17.sendMessage(_loc2_);
      }
      
      private function load() : void {
         var _loc2_:* = true;
         var _loc3_:* = false;
         var _loc1_:class_1220 = this.var_27.method_14(LOAD) as class_1220;
         _loc1_.charId_ = charId_;
         _loc1_.isFromArena_ = isFromArena_;
         var_17.sendMessage(_loc1_);
         if(isFromArena_)
         {
            this.var_1.dispatch(new BattleSummaryDialog());
         }
      }
      
      override public function playerShoot(param1:int, param2:Projectile) : void {
         var _loc4_:* = false;
         var _loc5_:* = true;
         var _loc3_:class_1229 = this.var_27.method_14(PLAYERSHOOT) as class_1229;
         _loc3_.time_ = param1;
         _loc3_.bulletId_ = param2.bulletId_;
         _loc3_.containerType_ = param2.containerType_;
         _loc3_.startingPos_.x_ = param2.x_;
         _loc3_.startingPos_.y_ = param2.y_;
         _loc3_.angle_ = param2.angle_;
         var_17.sendMessage(_loc3_);
      }
      
      override public function playerHit(param1:int, param2:int) : void {
         var _loc4_:* = false;
         var _loc5_:* = true;
         var _loc3_:class_1290 = this.var_27.method_14(PLAYERHIT) as class_1290;
         _loc3_.bulletId_ = param1;
         _loc3_.objectId_ = param2;
         var_17.sendMessage(_loc3_);
      }
      
      override public function enemyHit(param1:int, param2:int, param3:int, param4:Boolean) : void {
         var _loc6_:* = false;
         var _loc7_:* = true;
         var _loc5_:class_1239 = this.var_27.method_14(ENEMYHIT) as class_1239;
         _loc5_.time_ = param1;
         _loc5_.bulletId_ = param2;
         _loc5_.targetId_ = param3;
         _loc5_.kill_ = param4;
         var_17.sendMessage(_loc5_);
      }
      
      override public function otherHit(param1:int, param2:int, param3:int, param4:int) : void {
         var _loc6_:* = true;
         var _loc7_:* = false;
         var _loc5_:class_1263 = this.var_27.method_14(OTHERHIT) as class_1263;
         _loc5_.time_ = param1;
         _loc5_.bulletId_ = param2;
         _loc5_.objectId_ = param3;
         _loc5_.targetId_ = param4;
         var_17.sendMessage(_loc5_);
      }
      
      override public function squareHit(param1:int, param2:int, param3:int) : void {
         var _loc5_:* = false;
         var _loc6_:* = true;
         var _loc4_:class_1272 = this.var_27.method_14(SQUAREHIT) as class_1272;
         _loc4_.time_ = param1;
         _loc4_.bulletId_ = param2;
         _loc4_.objectId_ = param3;
         var_17.sendMessage(_loc4_);
      }
      
      public function method_427(param1:int, param2:Number, param3:Number) : void {
         var _loc5_:* = true;
         var _loc6_:* = false;
         var _loc4_:class_1302 = this.var_27.method_14(AOEACK) as class_1302;
         _loc4_.time_ = param1;
         _loc4_.position_.x_ = param2;
         _loc4_.position_.y_ = param3;
         var_17.sendMessage(_loc4_);
      }
      
      override public function groundDamage(param1:int, param2:Number, param3:Number) : void {
         var _loc5_:* = false;
         var _loc6_:* = true;
         var _loc4_:class_1298 = this.var_27.method_14(GROUNDDAMAGE) as class_1298;
         _loc4_.time_ = param1;
         _loc4_.position_.x_ = param2;
         _loc4_.position_.y_ = param3;
         var_17.sendMessage(_loc4_);
      }
      
      public function method_337(param1:int) : void {
         var _loc3_:* = false;
         var _loc4_:* = true;
         var _loc2_:class_1288 = this.var_27.method_14(SHOOTACK) as class_1288;
         _loc2_.time_ = param1;
         var_17.sendMessage(_loc2_);
      }
      
      override public function playerText(param1:String) : void {
         var _loc3_:* = false;
         var _loc4_:* = true;
         var _loc2_:class_1291 = this.var_27.method_14(PLAYERTEXT) as class_1291;
         _loc2_.text_ = param1;
         var_17.sendMessage(_loc2_);
      }
      
      override public function invSwap(param1:Player, param2:GameObject, param3:int, param4:int, param5:GameObject, param6:int, param7:int) : Boolean {
         var _loc10_:* = true;
         var _loc11_:* = false;
         if(!gs_)
         {
            return false;
         }
         var _loc8_:class_1258 = this.var_27.method_14(INVSWAP) as class_1258;
         _loc8_.time_ = gs_.lastUpdate_;
         _loc8_.position_.x_ = param1.x_;
         _loc8_.position_.y_ = param1.y_;
         _loc8_.slotObject1_.objectId_ = param2.objectId_;
         _loc8_.slotObject1_.var_213 = param3;
         _loc8_.slotObject1_.objectType_ = param4;
         _loc8_.slotObject2_.objectId_ = param5.objectId_;
         _loc8_.slotObject2_.var_213 = param6;
         _loc8_.slotObject2_.objectType_ = param7;
         var_17.sendMessage(_loc8_);
         var _loc9_:int = param2.var_33[param3];
         param2.var_33[param3] = param5.var_33[param6];
         param5.var_33[param6] = _loc9_;
         class_442.play("inventory_move_item");
         return true;
      }
      
      override public function invSwapPotion(param1:Player, param2:GameObject, param3:int, param4:int, param5:GameObject, param6:int, param7:int) : Boolean {
         var _loc11_:* = true;
         var _loc12_:* = false;
         if(!gs_)
         {
            return false;
         }
         var _loc8_:class_1258 = this.var_27.method_14(INVSWAP) as class_1258;
         _loc8_.time_ = gs_.lastUpdate_;
         _loc8_.position_.x_ = param1.x_;
         _loc8_.position_.y_ = param1.y_;
         _loc8_.slotObject1_.objectId_ = param2.objectId_;
         _loc8_.slotObject1_.var_213 = param3;
         _loc8_.slotObject1_.objectType_ = param4;
         _loc8_.slotObject2_.objectId_ = param5.objectId_;
         _loc8_.slotObject2_.var_213 = param6;
         _loc8_.slotObject2_.objectType_ = param7;
         param2.var_33[param3] = class_833.const_18;
         if(param4 == class_310.const_52)
         {
            param1.var_1232++;
         }
         else if(param4 == class_310.const_55)
         {
            param1.var_1100++;
         }
         
         var_17.sendMessage(_loc8_);
         class_442.play("inventory_move_item");
         return true;
      }
      
      override public function invDrop(param1:GameObject, param2:int, param3:int) : void {
         var _loc5_:* = false;
         var _loc6_:* = true;
         var _loc4_:class_1292 = this.var_27.method_14(INVDROP) as class_1292;
         _loc4_.slotObject_.objectId_ = param1.objectId_;
         _loc4_.slotObject_.var_213 = param2;
         _loc4_.slotObject_.objectType_ = param3;
         var_17.sendMessage(_loc4_);
         if(!(param2 == class_310.const_575) && !(param2 == class_310.const_602))
         {
            param1.var_33[param2] = class_833.const_18;
         }
      }
      
      override public function useItem(param1:int, param2:int, param3:int, param4:int, param5:Number, param6:Number, param7:int) : void {
         var _loc9_:* = true;
         var _loc10_:* = false;
         var _loc8_:class_1282 = this.var_27.method_14(USEITEM) as class_1282;
         _loc8_.time_ = param1;
         _loc8_.slotObject_.objectId_ = param2;
         _loc8_.slotObject_.var_213 = param3;
         _loc8_.slotObject_.objectType_ = param4;
         _loc8_.itemUsePos_.x_ = param5;
         _loc8_.itemUsePos_.y_ = param6;
         _loc8_.useType_ = param7;
         var_17.sendMessage(_loc8_);
      }
      
      override public function useItem_new(param1:GameObject, param2:int) : Boolean {
         var _loc5_:* = true;
         var _loc6_:* = false;
         var _loc3_:int = param1.var_33[param2];
         var _loc4_:XML = ObjectLibrary.const_4[_loc3_];
         if((_loc4_) && (!param1.isPaused()) && ((_loc4_.hasOwnProperty("Consumable")) || (_loc4_.hasOwnProperty("InvUse"))))
         {
            if(!this.method_1440(_loc3_,param1))
            {
               this.var_88.dispatch(class_829.make("",_loc4_.attribute("id") + " not consumed. Already at Max."));
               return false;
            }
            if(method_678(_loc3_))
            {
               this.var_88.dispatch(class_829.make("",_loc4_.attribute("id") + " Consumed ++"));
            }
            this.method_2685(param1,param2,_loc3_,_loc4_);
            class_442.play("use_potion");
            return true;
         }
         class_442.play("error");
         return false;
      }
      
      private function method_1440(param1:int, param2:GameObject) : Boolean {
         var _loc5_:* = true;
         var _loc6_:* = false;
         var p:Player = null;
         var itemId:int = param1;
         var itemOwner:GameObject = param2;
         try
         {
            if(itemOwner is Player)
            {
               p = itemOwner as Player;
            }
            else
            {
               p = this.player;
            }
            if(itemId == 2591 && p.var_1593 == p.var_680 - p.var_1327 || itemId == 2592 && p.var_1501 == p.var_413 - p.var_1318 || itemId == 2593 && p.var_1311 == p.speed_ - p.var_1544 || itemId == 2612 && p.var_1386 == p.var_792 - p.var_1610 || itemId == 2613 && p.var_1509 == p.var_959 - p.var_1344 || itemId == 2636 && p.var_1325 == p.var_769 - p.var_1656 || itemId == 2793 && p.var_977 == p.var_260 - p.var_817 || itemId == 2794 && p.var_916 == p.var_463 - p.var_989)
            {
               return false;
            }
         }
         catch(err:Error)
         {
            var_7._-0Ur.error("PROBLEM IN STAT INC " + err.getStackTrace());
         }
         return true;
      }
      
      private function method_2685(param1:GameObject, param2:int, param3:int, param4:XML) : void {
         var _loc6_:* = true;
         var _loc7_:* = false;
         var _loc5_:class_1282 = this.var_27.method_14(USEITEM) as class_1282;
         _loc5_.time_ = getTimer();
         _loc5_.slotObject_.objectId_ = param1.objectId_;
         _loc5_.slotObject_.var_213 = param2;
         _loc5_.slotObject_.objectType_ = param3;
         _loc5_.itemUsePos_.x_ = 0;
         _loc5_.itemUsePos_.y_ = 0;
         var_17.sendMessage(_loc5_);
         if(param4.hasOwnProperty("Consumable"))
         {
            param1.var_33[param2] = -1;
         }
      }
      
      override public function setCondition(param1:uint, param2:Number) : void {
         var _loc4_:* = false;
         var _loc5_:* = true;
         var _loc3_:class_1222 = this.var_27.method_14(SETCONDITION) as class_1222;
         _loc3_.conditionEffect_ = param1;
         _loc3_.conditionDuration_ = param2;
         var_17.sendMessage(_loc3_);
      }
      
      public function move(param1:int, param2:Player) : void {
         var _loc9_:* = true;
         var _loc10_:* = false;
         var _loc7_:* = 0;
         var _loc8_:* = 0;
         var _loc3_:Number = -1;
         var _loc4_:Number = -1;
         if((param2) && !param2.isPaused())
         {
            _loc3_ = param2.x_;
            _loc4_ = param2.y_;
         }
         var _loc5_:class_1268 = this.var_27.method_14(MOVE) as class_1268;
         _loc5_.tickId_ = param1;
         _loc5_.time_ = gs_.lastUpdate_;
         _loc5_.newPosition_.x_ = _loc3_;
         _loc5_.newPosition_.y_ = _loc4_;
         var _loc6_:int = gs_.moveRecords_.lastClearTime_;
         _loc5_.records_.length = 0;
         if(_loc6_ >= 0 && _loc5_.time_ - _loc6_ > 125)
         {
            _loc7_ = Math.min(10,gs_.moveRecords_.records_.length);
            _loc8_ = 0;
            while(_loc8_ < _loc7_)
            {
               if(gs_.moveRecords_.records_[_loc8_].time_ >= _loc5_.time_ - 25)
               {
                  break;
               }
               _loc5_.records_.push(gs_.moveRecords_.records_[_loc8_]);
               _loc8_++;
            }
         }
         gs_.moveRecords_.clear(_loc5_.time_);
         var_17.sendMessage(_loc5_);
      }
      
      override public function teleport(param1:int) : void {
         var _loc3_:* = true;
         var _loc4_:* = false;
         var _loc2_:Teleport = this.var_27.method_14(TELEPORT) as Teleport;
         _loc2_.objectId_ = param1;
         var_17.sendMessage(_loc2_);
      }
      
      override public function usePortal(param1:int) : void {
         var _loc3_:* = true;
         var _loc4_:* = false;
         var _loc2_:class_1294 = this.var_27.method_14(USEPORTAL) as class_1294;
         _loc2_.objectId_ = param1;
         var_17.sendMessage(_loc2_);
         this.method_464();
      }
      
      private function method_464() : void {
         var _loc1_:* = true;
         var _loc2_:* = false;
         if((gs_.map) && gs_.map.name_ == "Davy Jones\'s Locker")
         {
            class_296.name_8.dispatch();
         }
      }
      
      override public function buy(param1:int) : void {
         var _loc5_:* = true;
         var _loc6_:* = false;
         if(outstandingBuy_ != null)
         {
            return;
         }
         var _loc2_:SellableObject = gs_.map.goDict_[param1];
         if(_loc2_ == null)
         {
            return;
         }
         var _loc3_:* = false;
         if(_loc2_.currency_ == Currency.const_15)
         {
            _loc3_ = (gs_.model.getConverted()) || this.player.credits_ > 100 || _loc2_.price_ > this.player.credits_;
         }
         outstandingBuy_ = new class_1125(_loc2_.soldObjectInternalName(),_loc2_.price_,_loc2_.currency_,_loc3_);
         var _loc4_:Buy = this.var_27.method_14(BUY) as Buy;
         _loc4_.objectId_ = param1;
         var_17.sendMessage(_loc4_);
      }
      
      public function method_2854(param1:int) : void {
         var _loc3_:* = false;
         var _loc4_:* = true;
         var _loc2_:class_1278 = this.var_27.method_14(GOTOACK) as class_1278;
         _loc2_.time_ = param1;
         var_17.sendMessage(_loc2_);
      }
      
      override public function editAccountList(param1:int, param2:Boolean, param3:int) : void {
         var _loc5_:* = true;
         var _loc6_:* = false;
         var _loc4_:class_1243 = this.var_27.method_14(EDITACCOUNTLIST) as class_1243;
         _loc4_.accountListId_ = param1;
         _loc4_.add_ = param2;
         _loc4_.objectId_ = param3;
         var_17.sendMessage(_loc4_);
      }
      
      override public function chooseName(param1:String) : void {
         var _loc3_:* = false;
         var _loc4_:* = true;
         var _loc2_:class_1226 = this.var_27.method_14(CHOOSENAME) as class_1226;
         _loc2_.name_ = param1;
         var_17.sendMessage(_loc2_);
      }
      
      override public function createGuild(param1:String) : void {
         var _loc3_:* = true;
         var _loc4_:* = false;
         var _loc2_:class_1281 = this.var_27.method_14(CREATEGUILD) as class_1281;
         _loc2_.name_ = param1;
         var_17.sendMessage(_loc2_);
      }
      
      override public function guildRemove(param1:String) : void {
         var _loc3_:* = false;
         var _loc4_:* = true;
         var _loc2_:class_1235 = this.var_27.method_14(GUILDREMOVE) as class_1235;
         _loc2_.name_ = param1;
         var_17.sendMessage(_loc2_);
      }
      
      override public function guildInvite(param1:String) : void {
         var _loc3_:* = true;
         var _loc4_:* = false;
         var _loc2_:class_1245 = this.var_27.method_14(GUILDINVITE) as class_1245;
         _loc2_.name_ = param1;
         var_17.sendMessage(_loc2_);
      }
      
      override public function requestTrade(param1:String) : void {
         var _loc3_:* = false;
         var _loc4_:* = true;
         var _loc2_:class_1277 = this.var_27.method_14(REQUESTTRADE) as class_1277;
         _loc2_.name_ = param1;
         var_17.sendMessage(_loc2_);
      }
      
      override public function changeTrade(param1:Vector.<Boolean>) : void {
         var _loc3_:* = true;
         var _loc4_:* = false;
         var _loc2_:class_1219 = this.var_27.method_14(CHANGETRADE) as class_1219;
         _loc2_.offer_ = param1;
         var_17.sendMessage(_loc2_);
      }
      
      override public function acceptTrade(param1:Vector.<Boolean>, param2:Vector.<Boolean>) : void {
         var _loc4_:* = false;
         var _loc5_:* = true;
         var _loc3_:class_1257 = this.var_27.method_14(ACCEPTTRADE) as class_1257;
         _loc3_.myOffer_ = param1;
         _loc3_.yourOffer_ = param2;
         var_17.sendMessage(_loc3_);
      }
      
      override public function cancelTrade() : void {
         var _loc1_:* = false;
         var _loc2_:* = true;
         var_17.sendMessage(this.var_27.method_14(CANCELTRADE));
      }
      
      override public function checkCredits() : void {
         var _loc1_:* = true;
         var _loc2_:* = false;
         var_17.sendMessage(this.var_27.method_14(CHECKCREDITS));
      }
      
      override public function escape() : void {
         var _loc1_:* = false;
         var _loc2_:* = true;
         if(this.var_624 == -1)
         {
            return;
         }
         if((gs_.map) && gs_.map.name_ == "Arena")
         {
            var_17.sendMessage(this.var_27.method_14(const_608));
         }
         else
         {
            var_17.sendMessage(this.var_27.method_14(ESCAPE));
            this.method_464();
         }
      }
      
      override public function joinGuild(param1:String) : void {
         var _loc3_:* = true;
         var _loc4_:* = false;
         var _loc2_:class_1238 = this.var_27.method_14(JOINGUILD) as class_1238;
         _loc2_.guildName_ = param1;
         var_17.sendMessage(_loc2_);
      }
      
      override public function changeGuildRank(param1:String, param2:int) : void {
         var _loc4_:* = false;
         var _loc5_:* = true;
         var _loc3_:class_1249 = this.var_27.method_14(CHANGEGUILDRANK) as class_1249;
         _loc3_.name_ = param1;
         _loc3_.guildRank_ = param2;
         var_17.sendMessage(_loc3_);
      }
      
      private function method_576(param1:String) : String {
         var _loc5_:* = true;
         var _loc6_:* = false;
         var _loc2_:RSAKey = PEM.readRSAPublicKey(Parameters.const_1614);
         var _loc3_:ByteArray = new ByteArray();
         _loc3_.writeUTFBytes(param1);
         var _loc4_:ByteArray = new ByteArray();
         _loc2_.encrypt(_loc3_,_loc4_,_loc3_.length);
         return Base64.encodeByteArray(_loc4_);
      }
      
      private function method_628() : void {
         var _loc3_:* = true;
         var _loc4_:* = false;
         var _loc1_:Account = class_33.method_7().getInstance(Account);
         this.var_88.dispatch(class_829.make(Parameters.const_130,class_609.const_1386));
         this.method_2429();
         var _loc2_:class_1283 = this.var_27.method_14(HELLO) as class_1283;
         _loc2_.buildVersion_ = Parameters.const_131 + "." + Parameters.const_157;
         _loc2_.gameId_ = gameId_;
         _loc2_.guid_ = this.method_576(_loc1_.getUserId());
         _loc2_.password_ = this.method_576(_loc1_.method_234());
         _loc2_.secret_ = this.method_576(_loc1_.method_150());
         _loc2_.keyTime_ = keyTime_;
         _loc2_.key_.length = 0;
         _loc2_.var_187 = var_187 == null?"":var_187;
         _loc2_.var_1970 = _loc1_.method_258();
         _loc2_.var_1818 = _loc1_.method_149();
         _loc2_.var_1826 = _loc1_.method_286();
         _loc2_.name_66 = _loc1_._-UC.name_66();
         _loc2_.var_1690 = _loc1_.method_448();
         var_17.sendMessage(_loc2_);
      }
      
      private function method_2477(param1:class_1250) : void {
         var _loc2_:* = false;
         var _loc3_:* = true;
         this.var_624 = param1.objectId_;
         charId_ = param1.charId_;
         gs_.initialize();
         var_303 = false;
      }
      
      private function method_2233(param1:Damage) : void {
         var _loc6_:* = false;
         var _loc7_:* = true;
         var _loc5_:* = 0;
         var _loc2_:class_407 = gs_.map;
         var _loc3_:Projectile = null;
         if(param1.objectId_ >= 0 && param1.bulletId_ > 0)
         {
            _loc5_ = Projectile.method_1712(param1.objectId_,param1.bulletId_);
            _loc3_ = _loc2_.var_332[_loc5_] as Projectile;
            if(!(_loc3_ == null) && !_loc3_.var_31.var_774)
            {
               _loc2_.removeObj(_loc5_);
            }
         }
         var _loc4_:GameObject = _loc2_.goDict_[param1.targetId_];
         if(_loc4_ != null)
         {
            _loc4_.damage(-1,param1.damageAmount_,param1.effects_,param1.kill_,_loc3_);
         }
      }
      
      private function method_2739(param1:class_1286) : void {
         var _loc5_:* = true;
         var _loc6_:* = false;
         var _loc2_:* = param1.ownerId_ == this.var_624;
         var _loc3_:GameObject = gs_.map.goDict_[param1.ownerId_];
         if(_loc3_ == null || (_loc3_.var_261))
         {
            if(_loc2_)
            {
               this.method_337(-1);
            }
            return;
         }
         var _loc4_:Projectile = class_1152.method_84(Projectile) as Projectile;
         _loc4_.reset(param1.containerType_,0,param1.ownerId_,param1.bulletId_,param1.angle_,gs_.lastUpdate_);
         _loc4_.method_582(param1.damage_);
         gs_.map.addObj(_loc4_,param1.startingPos_.x_,param1.startingPos_.y_);
         if(_loc2_)
         {
            this.method_337(gs_.lastUpdate_);
         }
      }
      
      private function method_2119(param1:class_1295) : void {
         var _loc4_:* = true;
         var _loc5_:* = false;
         var _loc2_:GameObject = gs_.map.goDict_[param1.ownerId_];
         if(_loc2_ == null || (_loc2_.var_261))
         {
            return;
         }
         var _loc3_:Projectile = class_1152.method_84(Projectile) as Projectile;
         _loc3_.reset(param1.containerType_,0,param1.ownerId_,param1.bulletId_,param1.angle_,gs_.lastUpdate_);
         gs_.map.addObj(_loc3_,_loc2_.x_,_loc2_.y_);
         _loc2_.setAttack(param1.containerType_,param1.angle_);
      }
      
      private function method_2557(param1:class_1223) : void {
         var _loc3_:* = false;
         var _loc4_:* = true;
         var _loc2_:class_606 = this.var_104.method_47(this.model.player.objectType_).name_12.method_60(param1.skinID);
         _loc2_.setState(class_611.OWNED);
      }
      
      private function method_2258(param1:class_1240) : void {
         var _loc6_:* = false;
         var _loc7_:* = true;
         var _loc4_:Projectile = null;
         var _loc5_:* = NaN;
         var _loc2_:GameObject = gs_.map.goDict_[param1.ownerId_];
         if(_loc2_ == null || (_loc2_.var_261))
         {
            this.method_337(-1);
            return;
         }
         var _loc3_:* = 0;
         while(_loc3_ < param1.numShots_)
         {
            _loc4_ = class_1152.method_84(Projectile) as Projectile;
            _loc5_ = param1.angle_ + param1.angleInc_ * _loc3_;
            _loc4_.reset(_loc2_.objectType_,param1.bulletType_,param1.ownerId_,(param1.bulletId_ + _loc3_) % 256,_loc5_,gs_.lastUpdate_);
            _loc4_.method_582(param1.damage_);
            gs_.map.addObj(_loc4_,param1.startingPos_.x_,param1.startingPos_.y_);
            _loc3_++;
         }
         this.method_337(gs_.lastUpdate_);
         _loc2_.setAttack(_loc2_.objectType_,param1.angle_ + param1.angleInc_ * (param1.numShots_-1) / 2);
      }
      
      private function method_2126(param1:class_1244) : void {
         var _loc2_:* = false;
         var _loc3_:* = true;
         if(Parameters.data_.showTradePopup)
         {
            gs_.hudView.interactPanel.setOverride(new TradeRequestPanel(gs_,param1.name_));
         }
         this.var_88.dispatch(class_829.make("",param1.name_ + " wants to " + "trade with you.  Type \"/trade " + param1.name_ + "\" to trade."));
      }
      
      private function method_2064(param1:class_819) : void {
         var _loc2_:* = true;
         var _loc3_:* = false;
         gs_.hudView.startTrade(gs_,param1);
      }
      
      private function method_2063(param1:class_820) : void {
         var _loc2_:* = true;
         var _loc3_:* = false;
         gs_.hudView.tradeChanged(param1);
      }
      
      private function method_2923(param1:class_1217) : void {
         var _loc6_:* = true;
         var _loc7_:* = false;
         var _loc3_:Object = null;
         var _loc4_:Object = null;
         gs_.hudView.tradeDone();
         var _loc2_:* = "";
         try
         {
            _loc4_ = JSON.parse(param1.description_);
            _loc2_ = _loc4_.key;
            _loc3_ = _loc4_.tokens;
         }
         catch(e:Error)
         {
         }
         this.var_88.dispatch(class_829.make(Parameters.const_114,_loc2_,-1,-1,"",false,_loc3_));
      }
      
      private function method_1504(param1:class_821) : void {
         var _loc2_:* = true;
         var _loc3_:* = false;
         gs_.hudView.tradeAccepted(param1);
      }
      
      private function method_1752(param1:class_1254) : void {
         var _loc5_:* = true;
         var _loc6_:* = false;
         var _loc2_:class_407 = gs_.map;
         var _loc3_:GameObject = ObjectLibrary.method_1075(param1.objectType_);
         if(_loc3_ == null)
         {
            return;
         }
         var _loc4_:class_1234 = param1.var_1081;
         _loc3_.setObjectId(_loc4_.objectId_);
         _loc2_.addObj(_loc3_,_loc4_.pos_.x_,_loc4_.pos_.y_);
         if(_loc3_ is Player)
         {
            this.method_2509(_loc3_ as Player,_loc2_);
         }
         this.method_899(_loc4_,0,-1);
         if((_loc3_.props_.static_) && (_loc3_.props_.occupySquare_) && !_loc3_.props_.var_1561)
         {
            this.var_1762.dispatch(new class_1054(_loc3_.x_,_loc3_.y_,_loc3_));
         }
      }
      
      private function method_2509(param1:Player, param2:class_407) : void {
         var _loc3_:* = true;
         var _loc4_:* = false;
         this.method_931(param1,0);
         if(param1.objectId_ == this.var_624)
         {
            this.player = param1;
            this.model.player = param1;
            param2.player_ = param1;
            gs_.setFocus(param1);
            this.var_1721.dispatch(this.var_624.toString());
         }
      }
      
      private function method_1022(param1:Update) : void {
         var _loc5_:* = true;
         var _loc6_:* = false;
         var _loc3_:* = 0;
         var _loc4_:class_1293 = null;
         var _loc2_:class_711 = this.var_27.method_14(const_366);
         var_17.sendMessage(_loc2_);
         _loc3_ = 0;
         while(_loc3_ < param1.tiles_.length)
         {
            _loc4_ = param1.tiles_[_loc3_];
            gs_.map.setGroundTile(_loc4_.x_,_loc4_.y_,_loc4_.type_);
            this.var_1691.dispatch(new class_1053(_loc4_.x_,_loc4_.y_,_loc4_.type_));
            _loc3_++;
         }
         _loc3_ = 0;
         while(_loc3_ < param1.newObjs_.length)
         {
            this.method_1752(param1.newObjs_[_loc3_]);
            _loc3_++;
         }
         _loc3_ = 0;
         while(_loc3_ < param1.drops_.length)
         {
            gs_.map.removeObj(param1.drops_[_loc3_]);
            _loc3_++;
         }
      }
      
      private function method_1668(param1:class_1224) : void {
         var _loc5_:* = false;
         var _loc6_:* = true;
         var _loc3_:class_620 = null;
         var _loc4_:class_873 = null;
         var _loc2_:GameObject = gs_.map.goDict_[param1.objectId_];
         if(_loc2_ != null)
         {
            _loc3_ = class_620.method_261(param1.message);
            _loc4_ = new class_873(_loc2_,_loc3_,param1.color_,2000);
            gs_.map.mapOverlay_.addQueuedText(_loc4_);
            if(_loc2_ == this.player && _loc3_.key == "server.quest_complete")
            {
               gs_.map.quest_.completed();
            }
         }
      }
      
      private function method_2161(param1:class_1266) : void {
         var _loc3_:* = false;
         var _loc4_:* = true;
         if("yellow" !== _loc2_)
         {
            if("red" !== _loc2_)
            {
               switch(null)
               {
                  case "green":
                     class_349.name_8.dispatch(class_800.const_1442);
                     break;
                  case "purple":
                     class_349.name_8.dispatch(class_800.const_1309);
                     break;
                  case "showKeyUI":
                     class_349.name_8.dispatch(class_800.const_1532);
                     break;
                  case "giftChestOccupied":
                     class_349.name_8.dispatch(class_800.const_1269);
                     break;
                  case "giftChestEmpty":
                     class_296.name_8.dispatch();
                     break;
                  case "beginnersPackage":
                     this.var_1578.dispatch(class_416.const_1163);
                     break;
               }
               return;
            }
            if("red" === _loc2_)
            {
            }
         }
         if("yellow" === _loc2_)
         {
         }
      }
      
      private function method_2454(param1:class_1285) : void {
         var _loc5_:* = true;
         var _loc6_:* = false;
         var _loc2_:class_1234 = null;
         if(jitterWatcher_ != null)
         {
            jitterWatcher_.record();
         }
         this.move(param1.tickId_,this.player);
         for each(_loc2_ in param1.statuses_)
         {
            this.method_899(_loc2_,param1.tickTime_,param1.tickId_);
         }
         lastTickId_ = param1.tickId_;
      }
      
      private function method_2158(param1:class_1274) : void {
         var _loc8_:* = true;
         var _loc9_:* = false;
         var _loc3_:GameObject = null;
         var _loc4_:class_1146 = null;
         var _loc5_:Point = null;
         var _loc6_:uint = 0;
         var _loc2_:class_407 = gs_.map;
         switch(param1.effectType_)
         {
            case class_1274.const_1272:
               _loc3_ = _loc2_.goDict_[param1.targetObjectId_];
               if(_loc3_ == null)
               {
                  break;
               }
               _loc2_.addObj(new class_1289(_loc3_,param1.color_),_loc3_.x_,_loc3_.y_);
               break;
            case class_1274.const_1496:
               _loc2_.addObj(new TeleportEffect(),param1.pos1_.x_,param1.pos1_.y_);
               break;
            case class_1274.const_893:
               _loc4_ = new StreamEffect(param1.pos1_,param1.pos2_,param1.color_);
               _loc2_.addObj(_loc4_,param1.pos1_.x_,param1.pos1_.y_);
               break;
            case class_1274.const_1574:
               _loc3_ = _loc2_.goDict_[param1.targetObjectId_];
               _loc5_ = _loc3_ != null?new Point(_loc3_.x_,_loc3_.y_):param1.pos2_.method_115();
               _loc4_ = new ThrowEffect(_loc5_,param1.pos1_.method_115(),param1.color_);
               _loc2_.addObj(_loc4_,_loc5_.x,_loc5_.y);
               break;
            case class_1274.const_1291:
               _loc3_ = _loc2_.goDict_[param1.targetObjectId_];
               if(_loc3_ == null)
               {
                  break;
               }
               _loc4_ = new class_1275(_loc3_,param1.pos1_.x_,param1.color_);
               _loc2_.addObj(_loc4_,_loc3_.x_,_loc3_.y_);
               break;
            case class_1274.const_1554:
               _loc3_ = _loc2_.goDict_[param1.targetObjectId_];
               if(_loc3_ == null)
               {
                  break;
               }
               _loc4_ = new class_1227(_loc3_,param1.color_);
               _loc2_.addObj(_loc4_,_loc3_.x_,_loc3_.y_);
               break;
            case class_1274.const_1033:
               _loc3_ = _loc2_.goDict_[param1.targetObjectId_];
               if(_loc3_ == null)
               {
                  break;
               }
               _loc4_ = new class_1279(_loc3_,param1.pos1_,param1.color_);
               _loc2_.addObj(_loc4_,param1.pos1_.x_,param1.pos1_.y_);
               break;
            case class_1274.const_1557:
               _loc3_ = _loc2_.goDict_[param1.targetObjectId_];
               if(_loc3_ == null)
               {
                  break;
               }
               _loc4_ = new class_1233(_loc3_,param1.pos1_,param1.pos2_,param1.color_);
               _loc2_.addObj(_loc4_,param1.pos1_.x_,param1.pos1_.y_);
               break;
            case class_1274.const_1626:
               _loc3_ = _loc2_.goDict_[param1.targetObjectId_];
               if(_loc3_ == null)
               {
                  break;
               }
               _loc4_ = new FlowEffect(param1.pos1_,_loc3_,param1.color_);
               _loc2_.addObj(_loc4_,param1.pos1_.x_,param1.pos1_.y_);
               break;
            case class_1274.const_1170:
               _loc3_ = _loc2_.goDict_[param1.targetObjectId_];
               if(_loc3_ == null)
               {
                  break;
               }
               _loc4_ = new class_1256(_loc3_,param1.pos1_.x_,param1.color_);
               _loc2_.addObj(_loc4_,_loc3_.x_,_loc3_.y_);
               break;
            case class_1274.const_1335:
               _loc3_ = _loc2_.goDict_[param1.targetObjectId_];
               if(_loc3_ == null)
               {
                  break;
               }
               _loc4_ = new class_1225(_loc3_,param1.pos1_,param1.color_,param1.pos2_.x_);
               _loc2_.addObj(_loc4_,_loc3_.x_,_loc3_.y_);
               break;
            case class_1274.const_1656:
               _loc3_ = _loc2_.goDict_[param1.targetObjectId_];
               if(_loc3_ == null)
               {
                  break;
               }
               _loc4_ = new class_1269(_loc3_,param1.pos1_,param1.pos2_,param1.color_);
               _loc2_.addObj(_loc4_,param1.pos1_.x_,param1.pos1_.y_);
               break;
            case class_1274.const_1509:
               _loc3_ = _loc2_.goDict_[param1.targetObjectId_];
               if(_loc3_ == null)
               {
                  break;
               }
               _loc4_ = new class_1270(_loc3_,param1.pos1_,param1.pos2_.x_,param1.color_);
               _loc2_.addObj(_loc4_,_loc3_.x_,_loc3_.y_);
               break;
            case class_1274.const_1452:
               gs_.camera_.startJitter();
               break;
            case class_1274.const_1680:
               _loc3_ = _loc2_.goDict_[param1.targetObjectId_];
               if(_loc3_ == null)
               {
                  break;
               }
               _loc3_.var_657 = new class_1149(getTimer(),param1.color_,param1.pos1_.x_,param1.pos1_.y_);
               break;
            case class_1274.const_1709:
               _loc5_ = param1.pos1_.method_115();
               _loc4_ = new class_1248(param1.color_,param1.pos2_.method_115(),param1.pos1_.method_115());
               _loc2_.addObj(_loc4_,_loc5_.x,_loc5_.y);
               break;
            case class_1274.const_1590:
               _loc3_ = _loc2_.goDict_[param1.targetObjectId_];
               if(_loc3_ == null)
               {
                  break;
               }
               if((_loc3_) && (_loc3_.var_1412))
               {
                  _loc3_.var_1412.destroy();
               }
               _loc4_ = new class_1147(_loc3_);
               _loc3_.var_1412 = class_1147(_loc4_);
               gs_.map.addObj(_loc4_,_loc3_.x_,_loc3_.y_);
               break;
            case class_1274.const_1667:
               _loc3_ = _loc2_.goDict_[param1.targetObjectId_];
               if(_loc3_ == null)
               {
                  break;
               }
               _loc4_ = new class_1262(_loc3_);
               gs_.map.addObj(_loc4_,_loc3_.x_,_loc3_.y_);
               break;
            case class_1274.const_1479:
               _loc3_ = _loc2_.goDict_[param1.targetObjectId_];
               if(_loc3_ == null)
               {
                  break;
               }
               _loc6_ = param1.pos1_.x_ * 1000;
               _loc4_ = new class_1276(_loc3_,_loc6_);
               gs_.map.addObj(_loc4_,_loc3_.x_,_loc3_.y_);
               break;
         }
      }
      
      private function method_2171(param1:class_1273) : void {
         var _loc3_:* = false;
         var _loc4_:* = true;
         this.method_2854(gs_.lastUpdate_);
         var _loc2_:GameObject = gs_.map.goDict_[param1.objectId_];
         if(_loc2_ == null)
         {
            return;
         }
         _loc2_.method_2171(param1.pos_.x_,param1.pos_.y_,gs_.lastUpdate_);
      }
      
      private function method_2982(param1:GameObject, param2:Vector.<StatData>, param3:Boolean) : void {
         var _loc13_:* = false;
         var _loc14_:* = true;
         var _loc7_:StatData = null;
         var _loc8_:* = 0;
         var _loc9_:* = 0;
         var _loc4_:Player = param1 as Player;
         var _loc5_:Merchant = param1 as Merchant;
         var _loc6_:Pet = param1 as Pet;
         if(_loc6_)
         {
            this.var_1485.method_2153(_loc6_,param2);
            if(gs_.map.isPetYard)
            {
               this.var_1485.method_2011(_loc6_,param2);
            }
            return;
         }
         for each(_loc7_ in param2)
         {
            _loc8_ = _loc7_.var_384;
            if(StatData.const_359 !== _loc12_)
            {
               if(StatData.const_301 !== _loc12_)
               {
                  if(StatData.const_325 !== _loc12_)
                  {
                     if(StatData.const_334 !== _loc12_)
                     {
                        switch(null)
                        {
                           case StatData.const_283:
                              param1.var_260 = _loc8_;
                              continue;
                           case StatData.const_1376:
                              param1.var_264 = _loc8_;
                              continue;
                           case StatData.const_702:
                              param1.size_ = _loc8_;
                              continue;
                           case StatData.const_316:
                              _loc4_.var_463 = _loc8_;
                              continue;
                           case StatData.const_311:
                              _loc4_.var_389 = _loc8_;
                              continue;
                           case StatData.const_352:
                              _loc4_.var_1896 = _loc8_;
                              continue;
                           case StatData.const_353:
                              _loc4_.exp_ = _loc8_;
                              continue;
                           case StatData.const_319:
                              param1.var_168 = _loc8_;
                              continue;
                           case StatData.const_282:
                              _loc4_.var_680 = _loc8_;
                              continue;
                           case StatData.const_320:
                              param1.var_413 = _loc8_;
                              continue;
                           case StatData.const_472:
                              _loc4_.speed_ = _loc8_;
                              continue;
                           case StatData.INVENTORY_0_STAT:
                              _loc4_.var_769 = _loc8_;
                              continue;
                           case StatData.INVENTORY_1_STAT:
                              _loc4_.var_792 = _loc8_;
                              continue;
                           case StatData.INVENTORY_2_STAT:
                              _loc4_.var_959 = _loc8_;
                              continue;
                           case StatData.INVENTORY_3_STAT:
                              param1.condition_[ConditionEffect.const_6] = _loc8_;
                              continue;
                           case StatData.INVENTORY_4_STAT:
                           case StatData.INVENTORY_5_STAT:
                           case StatData.INVENTORY_6_STAT:
                           case StatData.INVENTORY_7_STAT:
                           case StatData.INVENTORY_8_STAT:
                           case StatData.INVENTORY_9_STAT:
                           case StatData.INVENTORY_10_STAT:
                           case StatData.INVENTORY_11_STAT:
                           case StatData.const_989:
                           case StatData.const_560:
                           case StatData.TEX1_STAT:
                           case StatData.TEX2_STAT:
                              param1.var_33[_loc7_.var_145 - StatData.INVENTORY_0_STAT] = _loc8_;
                              continue;
                           case StatData.const_1000:
                              _loc4_.numStars_ = _loc8_;
                              continue;
                           case StatData.const_1604:
                              if(param1.name_ != _loc7_.var_340)
                              {
                                 param1.name_ = _loc7_.var_340;
                                 param1.var_229 = null;
                              }
                              continue;
                           case StatData.const_928:
                              param1.setTex1(_loc8_);
                              continue;
                           case StatData.const_1216:
                              param1.setTex2(_loc8_);
                              continue;
                           case StatData.const_676:
                              _loc5_.setMerchandiseType(_loc8_);
                              continue;
                           case StatData.const_1347:
                              _loc4_.method_397(_loc8_);
                              continue;
                           case StatData.const_1162:
                              (param1 as SellableObject).setPrice(_loc8_);
                              continue;
                           case StatData.const_1196:
                              (param1 as Portal).var_857 = !(_loc8_ == 0);
                              continue;
                           case StatData.const_1584:
                              _loc4_.accountId_ = _loc7_.var_340;
                              continue;
                           case StatData.const_1374:
                              _loc4_.var_190 = _loc8_;
                              continue;
                           case StatData.const_1707:
                              (param1 as SellableObject).method_2231(_loc8_);
                              continue;
                           case StatData.const_1328:
                              param1.var_1877 = _loc8_;
                              continue;
                           case StatData.const_1029:
                              _loc5_.var_1307 = _loc8_;
                              _loc5_.var_329 = 0;
                              continue;
                           case StatData.const_944:
                              _loc5_.var_435 = _loc8_;
                              _loc5_.var_329 = 0;
                              continue;
                           case StatData.const_959:
                              _loc5_.var_1487 = _loc8_;
                              _loc5_.var_329 = 0;
                              continue;
                           case StatData.const_1348:
                              (param1 as SellableObject).setRankReq(_loc8_);
                              continue;
                           case StatData.const_1283:
                              _loc4_.var_817 = _loc8_;
                              continue;
                           case StatData.const_1495:
                              _loc4_.var_989 = _loc8_;
                              continue;
                           case StatData.const_1218:
                              _loc4_.var_1327 = _loc8_;
                              continue;
                           case StatData.const_913:
                              _loc4_.var_1318 = _loc8_;
                              continue;
                           case StatData.const_632:
                              _loc4_.var_1544 = _loc8_;
                              continue;
                           case StatData.const_1419:
                              _loc4_.var_1610 = _loc8_;
                              continue;
                           case StatData.const_1332:
                              _loc4_.var_1344 = _loc8_;
                              continue;
                           case StatData.const_1203:
                              _loc4_.var_1656 = _loc8_;
                              continue;
                           case StatData.const_1651:
                              (param1 as Container).method_1497(_loc7_.var_340);
                              continue;
                           case StatData.const_1484:
                              (param1 as NameChanger).method_2078(_loc8_);
                              continue;
                           case StatData.const_1694:
                              _loc4_.var_395 = !(_loc8_ == 0);
                              param1.var_229 = null;
                              continue;
                           case StatData.const_1527:
                              _loc4_.var_1987 = _loc8_;
                              continue;
                           case StatData.const_742:
                              _loc4_.var_1801 = _loc8_;
                              continue;
                           case StatData.const_1083:
                              _loc4_.var_1696 = _loc8_;
                              continue;
                           case StatData.const_1665:
                              if(!param3)
                              {
                                 _loc4_.var_281 = _loc8_;
                              }
                              continue;
                           case StatData.const_1145:
                              param1.method_1704(_loc8_);
                              continue;
                           case StatData.const_1048:
                              _loc4_.method_1214(_loc7_.var_340);
                              continue;
                           case StatData.const_1397:
                              _loc4_.guildRank_ = _loc8_;
                              continue;
                           case StatData.const_1382:
                              _loc4_.breath_ = _loc8_;
                              continue;
                           case StatData.const_1417:
                              _loc4_.var_1597 = _loc8_;
                              continue;
                           case StatData.const_1518:
                              _loc4_.var_349 = _loc8_ * const_290;
                              continue;
                           case StatData.const_326:
                              _loc4_.var_302 = _loc8_ * const_290;
                              continue;
                           case StatData.const_1521:
                              _loc4_.var_279 = _loc8_ * const_290;
                              continue;
                           case StatData.BACKPACK_0_STAT:
                              _loc4_.var_1232 = _loc8_;
                              continue;
                           case StatData.BACKPACK_1_STAT:
                              _loc4_.var_1100 = _loc8_;
                              continue;
                           case StatData.BACKPACK_2_STAT:
                              continue;
                           case StatData.BACKPACK_3_STAT:
                              (param1 as Player).var_1198 = Boolean(_loc8_);
                              if(param3)
                              {
                                 this.var_1975.dispatch(Boolean(_loc8_));
                              }
                              continue;
                           case StatData.BACKPACK_4_STAT:
                           case StatData.BACKPACK_5_STAT:
                           case StatData.BACKPACK_6_STAT:
                           case StatData.BACKPACK_7_STAT:
                           case StatData.const_890:
                              _loc9_ = _loc7_.var_145 - StatData.BACKPACK_0_STAT + class_915.const_65 + class_915.const_121;
                              (param1 as Player).var_33[_loc9_] = _loc8_;
                              continue;
                           default:
                              continue;
                        }
                     }
                     if(StatData.const_334 === _loc12_)
                     {
                     }
                  }
                  if(StatData.const_325 === _loc12_)
                  {
                  }
               }
               if(StatData.const_301 === _loc12_)
               {
               }
            }
            if(StatData.const_359 === _loc12_)
            {
            }
         }
      }
      
      private function method_931(param1:Player, param2:int) : void {
         var _loc4_:* = false;
         var _loc5_:* = true;
         var _loc3_:class_937 = this.var_27.method_14(RESKIN) as class_937;
         _loc3_.skinID = param2;
         _loc3_.player = param1;
         _loc3_.consume();
      }
      
      private function method_899(param1:class_1234, param2:int, param3:int) : void {
         var _loc12_:* = false;
         var _loc13_:* = true;
         var _loc8_:* = 0;
         var _loc9_:* = 0;
         var _loc10_:class_605 = null;
         var _loc11_:Array = null;
         var _loc4_:class_407 = gs_.map;
         var _loc5_:GameObject = _loc4_.goDict_[param1.objectId_];
         if(_loc5_ == null)
         {
            return;
         }
         var _loc6_:* = param1.objectId_ == this.var_624;
         if(!(param2 == 0) && !_loc6_)
         {
            _loc5_.method_2828(param1.pos_.x_,param1.pos_.y_,param2,param3);
         }
         var _loc7_:Player = _loc5_ as Player;
         if(_loc7_ != null)
         {
            _loc8_ = _loc7_.var_168;
            _loc9_ = _loc7_.exp_;
         }
         this.method_2982(_loc5_,param1.name_14,_loc6_);
         if(_loc7_)
         {
            if(_loc6_)
            {
               _loc10_ = this.var_104.method_47(_loc7_.objectType_);
               if(_loc10_.method_2101() < _loc7_.var_168)
               {
                  _loc10_.method_879(_loc7_.var_168);
               }
            }
            if(!(_loc8_ == -1) && _loc7_.var_168 > _loc8_)
            {
               if(_loc6_)
               {
                  _loc11_ = gs_.model.getNewUnlocks(_loc7_.objectType_,_loc7_.var_168);
                  _loc7_.method_1545(!(_loc11_.length == 0));
               }
               else
               {
                  _loc7_.method_441(class_609.const_485);
               }
            }
            else if(!(_loc8_ == -1) && _loc7_.exp_ > _loc9_)
            {
               _loc7_.method_2797(_loc7_.exp_ - _loc9_);
            }
            
         }
      }
      
      private function method_1942(param1:class_1300) : void {
         var _loc2_:* = true;
         var _loc3_:* = false;
         if(param1.result_ != 0)
         {
            this.method_1458();
         }
      }
      
      private function method_1458() : void {
         var _loc1_:* = true;
         var _loc2_:* = false;
         class_442.play("error");
         gs_.hudView.interactPanel.redraw();
      }
      
      private function method_1087(param1:class_1284) : void {
         var _loc9_:* = false;
         var _loc10_:* = true;
         var _loc2_:Server = new Server().setName(param1.name_).setAddress(param1.host_ != ""?param1.host_:server_.address).setPort(param1.host_ != ""?param1.port_:server_.port);
         var _loc3_:int = param1.gameId_;
         var _loc4_:Boolean = var_303;
         var _loc5_:int = charId_;
         var _loc6_:int = param1.keyTime_;
         var _loc7_:ByteArray = param1.key_;
         isFromArena_ = param1.isFromArena_;
         var _loc8_:class_861 = new class_861(_loc2_,_loc3_,_loc4_,_loc5_,_loc6_,_loc7_,isFromArena_);
         gs_.dispatchEvent(_loc8_);
      }
      
      private function method_2343(param1:class_1264) : void {
         var _loc3_:* = true;
         var _loc4_:* = false;
         var _loc2_:class_1253 = this.var_27.method_14(PONG) as class_1253;
         _loc2_.serial_ = param1.serial_;
         _loc2_.time_ = getTimer();
         var_17.sendMessage(_loc2_);
      }
      
      private function method_1091(param1:String) : void {
         var _loc3_:* = true;
         var _loc4_:* = false;
         var _loc2_:XML = XML(param1);
         class_439.method_107(_loc2_);
         ObjectLibrary.method_107(_loc2_);
         ObjectLibrary.method_107(_loc2_);
      }
      
      private function method_1456(param1:class_752) : void {
         var _loc6_:* = false;
         var _loc7_:* = true;
         var _loc2_:String = null;
         var _loc3_:String = null;
         for each(_loc2_ in param1.clientXML_)
         {
            this.method_1091(_loc2_);
         }
         for each(_loc3_ in param1.extraXML_)
         {
            this.method_1091(_loc3_);
         }
         var_636.dispatch();
         this.closeDialogs.dispatch();
         gs_.applyMapInfo(param1);
         this.var_2000 = new Random(param1.fp_);
         if(var_303)
         {
            this.create();
         }
         else
         {
            this.load();
         }
      }
      
      private function method_1706(param1:Pic) : void {
         var _loc2_:* = false;
         var _loc3_:* = true;
         gs_.addChild(new class_1261(param1.bitmapData_));
      }
      
      private function method_1790(param1:class_879) : void {
         var _loc3_:* = true;
         var _loc4_:* = false;
         this.death = param1;
         var _loc2_:BitmapData = new class_441(gs_.stage.stageWidth,gs_.stage.stageHeight);
         _loc2_.draw(gs_);
         param1.background = _loc2_;
         if(!gs_.isEditor)
         {
            this.var_1769.dispatch(param1);
         }
         this.method_464();
      }
      
      private function method_1473(param1:class_1246) : void {
         var _loc2_:* = true;
         var _loc3_:* = false;
         if(param1.result_ == class_1246.const_605)
         {
            if(outstandingBuy_ != null)
            {
               outstandingBuy_.record();
            }
         }
         outstandingBuy_ = null;
         this.method_2880(param1);
      }
      
      private function method_2880(param1:class_1246) : void {
         var _loc4_:* = true;
         var _loc5_:* = false;
         var _loc2_:class_829 = null;
         if(class_1246.const_1085 !== _loc3_)
         {
            if(class_1246.const_1659 !== _loc3_)
            {
               switch(null)
               {
                  case class_1246.const_933:
                     _loc2_ = class_829.make(Parameters.const_114,param1.resultString_);
                     this.var_88.dispatch(_loc2_);
                     break;
                  default:
                     this.method_1514(param1);
               }
               return;
            }
            if(class_1246.const_1659 === _loc3_)
            {
            }
         }
         if(class_1246.const_1085 === _loc3_)
         {
         }
      }
      
      private function method_1514(param1:class_1246) : void {
         var _loc5_:* = false;
         var _loc6_:* = true;
         var _loc2_:class_620 = class_620.method_261(param1.resultString_);
         var _loc3_:Boolean = param1.result_ == class_1246.const_605 || param1.result_ == class_1246.const_1186;
         var _loc4_:class_829 = class_829.make(_loc3_?Parameters.const_114:Parameters.const_20,_loc2_.key);
         _loc4_.tokens = _loc2_.tokens;
         this.var_88.dispatch(_loc4_);
      }
      
      private function method_2863(param1:class_1210) : void {
         var _loc2_:* = false;
         var _loc3_:* = true;
         if(param1.accountListId_ == 0)
         {
            gs_.map.party_.setStars(param1);
         }
         if(param1.accountListId_ == 1)
         {
            gs_.map.party_.setIgnores(param1);
         }
      }
      
      private function method_1886(param1:class_1241) : void {
         var _loc2_:* = false;
         var _loc3_:* = true;
         gs_.map.quest_.setObject(param1.objectId_);
      }
      
      private function method_2701(param1:class_1280) : void {
         var _loc6_:* = false;
         var _loc7_:* = true;
         var _loc4_:* = 0;
         var _loc5_:Vector.<uint> = null;
         if(this.player == null)
         {
            this.method_427(gs_.lastUpdate_,0,0);
            return;
         }
         var _loc2_:class_1228 = new class_1228(param1.pos_.method_115(),param1.radius_,16711680);
         gs_.map.addObj(_loc2_,param1.pos_.x_,param1.pos_.y_);
         if((this.player.method_352()) || (this.player.isPaused()))
         {
            this.method_427(gs_.lastUpdate_,this.player.x_,this.player.y_);
            return;
         }
         var _loc3_:* = this.player.method_1371(param1.pos_) < param1.radius_;
         if(_loc3_)
         {
            _loc4_ = GameObject.method_1005(param1.damage_,this.player.var_413,false,this.player.condition_[ConditionEffect.const_6]);
            _loc5_ = null;
            if(param1.effect_ != 0)
            {
               _loc5_ = new Vector.<uint>();
               _loc5_.push(param1.effect_);
            }
            this.player.damage(param1.origType_,_loc4_,_loc5_,false,null);
         }
         this.method_427(gs_.lastUpdate_,this.player.x_,this.player.y_);
      }
      
      private function method_1110(param1:class_1179) : void {
         var _loc2_:* = true;
         var _loc3_:* = false;
         gs_.dispatchEvent(new class_859(param1));
      }
      
      private function method_2492(param1:class_1231) : void {
         var _loc3_:* = true;
         var _loc4_:* = false;
         var _loc2_:class_620 = null;
         if(param1.lineBuilderJSON == "")
         {
            gs_.dispatchEvent(new class_868(param1.success_,"",{}));
         }
         else
         {
            _loc2_ = class_620.method_261(param1.lineBuilderJSON);
            this.var_88.dispatch(class_829.make(Parameters.const_20,_loc2_.key,-1,-1,"",false,_loc2_.tokens));
            gs_.dispatchEvent(new class_868(param1.success_,_loc2_.key,_loc2_.tokens));
         }
      }
      
      private function method_2664(param1:class_1259) : void {
         var _loc3_:* = true;
         var _loc4_:* = false;
         var _loc2_:Account = class_33.method_7().getInstance(Account);
         _loc2_.method_185(param1.name_,param1.value_);
      }
      
      private function method_2817(param1:File) : void {
         var _loc2_:* = true;
         var _loc3_:* = false;
         new FileReference().save(param1.file_,param1.filename_);
      }
      
      private function method_1656(param1:class_1296) : void {
         var _loc2_:* = false;
         var _loc3_:* = true;
         if(Parameters.data_.showGuildInvitePopup)
         {
            gs_.hudView.interactPanel.setOverride(new class_1232(gs_,param1.name_,param1.guildName_));
         }
         this.var_88.dispatch(class_829.make("","You have been invited by " + param1.name_ + " to join the guild " + param1.guildName_ + ".\n  If you wish to join type \"/join " + param1.guildName_ + "\""));
      }
      
      private function method_1377(param1:class_1251) : void {
         var _loc3_:* = true;
         var _loc4_:* = false;
         var _loc2_:GameObject = gs_.map.goDict_[param1.ownerId_];
      }
      
      private function method_1662(param1:class_1221) : void {
         var _loc2_:* = false;
         var _loc3_:* = true;
         this.var_1852.dispatch(param1.currentRuntime);
      }
      
      private function method_731(param1:class_1247) : void {
         var _loc2_:* = true;
         var _loc3_:* = false;
         this.var_1060.var_1825 = param1.cost;
         this.var_1.dispatch(new ContinueOrQuitDialog(param1.cost,false));
         this.var_1902.dispatch();
      }
      
      private function method_1863(param1:class_1252) : void {
         var _loc3_:* = false;
         var _loc4_:* = true;
         TitleView.var_864 = true;
         if(gs_ != null)
         {
            gs_.closed.dispatch();
         }
         var _loc2_:class_216 = class_33.method_7().getInstance(class_216);
         if(_loc2_ != null)
         {
            _loc2_.dispatch();
         }
      }
      
      private function method_2586(param1:class_1260) : void {
         var _loc3_:* = false;
         var _loc4_:* = true;
         if(param1.cleanPasswordStatus == 3)
         {
            TitleView.var_797 = true;
         }
         else
         {
            TitleView.var_794 = true;
         }
         if(gs_ != null)
         {
            gs_.closed.dispatch();
         }
         var _loc2_:class_216 = class_33.method_7().getInstance(class_216);
         if(_loc2_ != null)
         {
            _loc2_.dispatch();
         }
      }
      
      private function method_551() : void {
         var _loc4_:* = false;
         var _loc5_:* = true;
         var _loc1_:class_216 = null;
         if(this.var_624 != -1)
         {
            gs_.closed.dispatch();
         }
         else if(this.var_1050)
         {
            if(this.var_1053 < 10)
            {
               if(this.var_1053 == 6)
               {
                  _loc1_ = class_33.method_7().getInstance(class_216);
                  _loc1_.dispatch();
               }
               this.method_2585(this.var_1053++);
               this.var_88.dispatch(class_829.make(Parameters.const_20,"Connection failed!  Retrying..."));
            }
            else
            {
               gs_.closed.dispatch();
            }
         }
         
      }
      
      private function method_2585(param1:int) : void {
         var _loc2_:* = false;
         var _loc3_:* = true;
         this.var_1598 = new Timer(param1 * 1000,1);
         this.var_1598.addEventListener(TimerEvent.TIMER_COMPLETE,this.method_1344);
         this.var_1598.start();
      }
      
      private function method_1344(param1:TimerEvent) : void {
         var _loc2_:* = true;
         var _loc3_:* = false;
         var_17.connect(server_.address,server_.port);
      }
      
      private function method_194(param1:String) : void {
         var _loc2_:* = true;
         var _loc3_:* = false;
         this.var_88.dispatch(class_829.make(Parameters.const_20,param1));
      }
      
      private function method_1619(param1:class_1218) : void {
         var _loc3_:* = true;
         var _loc4_:* = false;
         if(class_1218.const_1466 !== _loc2_)
         {
            if(class_1218.const_993 !== _loc2_)
            {
               if(class_1218.const_1361 !== _loc2_)
               {
                  switch(null)
                  {
                     case class_1218.const_906:
                        this.method_1929(param1);
                        break;
                     default:
                        this.method_2296(param1);
                  }
                  return;
               }
               if(class_1218.const_1361 === _loc2_)
               {
               }
            }
            if(class_1218.const_993 === _loc2_)
            {
            }
         }
         if(class_1218.const_1466 === _loc2_)
         {
         }
      }
      
      private function method_2442(param1:class_1218) : void {
         var _loc2_:* = false;
         var _loc3_:* = true;
         this.var_1050 = false;
         gs_.closed.dispatch();
      }
      
      private function method_1699(param1:class_1218) : void {
         var _loc2_:* = false;
         var _loc3_:* = true;
         this.var_88.dispatch(class_829.make(Parameters.const_20,param1.errorDescription_));
         this.player.var_1634 = 0;
      }
      
      private function method_1646(param1:class_1218) : void {
         var _loc2_:* = false;
         var _loc3_:* = true;
         this.var_88.dispatch(class_829.make(Parameters.const_20,param1.errorDescription_));
         this.var_1050 = false;
         gs_.closed.dispatch();
      }
      
      private function method_1929(param1:class_1218) : void {
         var _loc3_:* = false;
         var _loc4_:* = true;
         var _loc2_:Dialog = new Dialog(class_609.const_1220,"",class_609.const_1334,null,"/clientUpdate");
         _loc2_.method_110(class_609.const_957,
            {
               "client":Parameters.const_131,
               "server":param1.errorDescription_
            });
         _loc2_.addEventListener(Dialog.LEFT_BUTTON,this.method_2845);
         gs_.stage.addChild(_loc2_);
         this.var_1050 = false;
      }
      
      private function method_2296(param1:class_1218) : void {
         var _loc2_:* = true;
         var _loc3_:* = false;
         this.var_88.dispatch(class_829.make(Parameters.const_20,param1.errorDescription_));
      }
      
      private function method_2845(param1:Event) : void {
         var _loc3_:* = false;
         var _loc4_:* = true;
         var _loc2_:Dialog = param1.currentTarget as Dialog;
         _loc2_.parent.removeChild(_loc2_);
         gs_.closed.dispatch();
      }
      
      override public function isConnected() : Boolean {
         return var_17.isConnected();
      }
   }
}
